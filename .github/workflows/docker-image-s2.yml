name: Docker Image CI-S2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: 329082085800.dkr.ecr.eu-central-1.amazonaws.com
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Build the Docker image
      uses: actions/checkout@v4
    - run: |
        cd service2
        docker build . --file Dockerfile --tag 329082085800.dkr.ecr.eu-central-1.amazonaws.com/echo-server:${{ github.run_id }}
        docker run -d -p 8080:8080 -e ECHO_MESSAGE="Hello from Staging" -e ENVIRONMENT=staging 329082085800.dkr.ecr.eu-central-1.amazonaws.com/echo-server:${{ github.run_id }}
        docker ps -a
        sleep 10
        curl http://localhost:8080/index.html 
        docker push 329082085800.dkr.ecr.eu-central-1.amazonaws.com/echo-server:${{ github.run_id }}
        
    - name: Deploy index.html
      run: |
        aws eks update-kubeconfig  --name boaz-eks-VDpZSLdu
        kubectl create configmap index-html --from-file=../service1/index.html --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy echo-server
      run: |
        helm install --update echo-server --set image.tag=:${{ github.run_id }} ./echo-server
        
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'eu-central-1'
